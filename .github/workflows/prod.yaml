name: Production

env:
  GCLOUD_PROJECT_ID: clients-210617
  GCLOUD_SERVICE_ACCOUNT_EMAIL: google-run-admin@clients-210617.iam.gserviceaccount.com
  GCLOUD_PROD_SQL_ID: github-action-test
  SERVICE_NAME: test-api

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  deploy:
    name: Build and Deploy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v1

      - name: Build Docker image
        run: |
          docker build . --tag gcr.io/$GCLOUD_PROJECT_ID/api-prod
      - name: Authenticate into Google Cloud Platform
        uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
        with:
          service_account_email: $GCLOUD_SERVICE_ACCOUNT_EMAIL
          service_account_key: ${{ secrets.GCLOUD_AUTH }}

      - name: Configure Docker to use Google Cloud Platform
        run: "gcloud auth configure-docker --quiet"

      - name: Push image to Google Cloud Container Registry
        run: docker push gcr.io/$GCLOUD_PROJECT_ID/api-prod

      - name: Install beta commands and deploy on cloud run
        run: |
          echo ${{github.event_name}}
          gcloud components install beta --quiet
          cd ..
          gcloud beta run deploy $SERVICE_NAME-prod --quiet --image gcr.io/$GCLOUD_PROJECT_ID/api-prod \
                    --project $GCLOUD_PROJECT_ID \
                    --set-cloudsql-instances $GCLOUD_PROD_SQL_ID \
                    --flags-file gcloud_flags.yaml

      - name: Clean up images from Google Cloud Container Registry
        run: "gcloud container images delete gcr.io/$GCLOUD_PROJECT_ID/api"
  test:
    name: Testing
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'push' && github.event.sender.id == 362087488}}

    steps:
      - name: Test action
        run: "echo 'This is a push by ${{github.event.commits.author}} | ${{github.event.sender.id}}'"
